<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/testtoby?useSSL=false"/>
        <property name="username" value="root"/>
        <property name="password" value="1111"/>
    </bean>
    <bean id="userDao" class="dao.independent.UserDaoJDBC">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="mailSender" class="dao.independent.DummyMailSender">
    </bean>

    <bean id="userServiceImpl" class="dao.service.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
        <property name="mailSender" ref="mailSender"/>
    </bean>


    <bean id="message" class="proxy.MessageFactoryBean">
        <property name="text" value="Factory Bean"/>
    </bean>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <constructor-arg ref="dataSource"/>
    </bean>


    <bean id="userService" class="proxy.TxProxyFactoryBean">
        <property name="target" ref="userServiceImpl"/>
        <property name="transactionManager" ref="transactionManager"/>
        <property name="pattern" value="upgradeLevels"/>
        <!--Class 타입은 value 를 이용해 클래스 또는 인터페이스의 이름을 넣어주면 됨
            스프링은 수정자 메소드의 파라미터 타입을 확인해서 프로퍼티의 타입이 Class 인 경우
            value로 설정한 이름을 가진 Class 오브젝트로 자동 변환해준다.-->
        <property name="serviceInterface" value="dao.service.UserService"/>
    </bean>
</beans>